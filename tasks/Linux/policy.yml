---
- name: Create an default ACL with rules.
  consul_acl_policy:
    name: 'default'
    description: 'An default policy'
    rules: |
      acl = "read"
      node_prefix "" {
        policy = "write"
      }
      service_prefix "" {
        policy = "read"
      }
      operator = "read"
      keyring = "read"
    state: 'present'
    url: '{% if not consul_arg.https | bool %}http{% else %}https{% endif %}://127.0.0.1:{{ consul_port_arg.http }}'
    token: '{{ consul_acl_arg.master_token }}'
    validate_certs: 'no'
  register: consul_acl_policy
  until: consul_acl_policy is succeeded
  retries: 5
  delay: 2
  environment:
    no_proxy: '127.0.0.1'
  when:
    - consul_node_role == 'server'
    - consul_servers[0] in ansible_default_ipv4.address

- name: Create an default ACL token.
  consul_acl_token:
    description: 'An default token'
    policies:
      - id: '{{ consul_acl_policy.id }}'
    local: 'false'
    state: 'present'
    url: '{% if not consul_arg.https | bool %}http{% else %}https{% endif %}://127.0.0.1:{{ consul_port_arg.http }}'
    token: '{{ consul_acl_arg.master_token }}'
    validate_certs: 'no'
  register: consul_acl_token
  until: consul_acl_token is succeeded
  retries: 5
  delay: 2
  when:
    - consul_node_role == 'server'
    - consul_acl_policy.operation is defined
    - consul_acl_policy.operation == "create"
    - consul_servers[0] in ansible_default_ipv4.address
  environment:
    no_proxy: '127.0.0.1'

- name: Create an agent ACL with rules.
  consul_acl_policy:
    name: '{{ ansible_hostname | lower }}-agent'
    description: '{{ ansible_hostname | lower }}-node'
    rules: |
      acl = "write"
      node_prefix "" {
        policy = "write"
      }
      node "{{ ansible_hostname | lower }}" {
        policy = "write"
      }
      service_prefix "" {
        policy = "read"
      }
      key_prefix "_rexec" {
        policy = "write"
      }
    state: 'present'
    url: '{% if not consul_arg.https | bool %}http{% else %}https{% endif %}://{{ consul_join_servers[0] }}:{{ consul_port_arg.http }}'
    token: '{{ consul_acl_arg.master_token }}'
    validate_certs: 'no'
  register: consul_acl_policy
  until: consul_acl_policy is succeeded
  retries: 5
  delay: 2
  environment:
    no_proxy: '{{ consul_join_servers[0] }}'
  when: consul_node_role == 'client'

- name: Create an agent ACL token.
  consul_acl_token:
    description: '{{ ansible_hostname | lower }}-node'
    policies:
      - id: '{{ consul_acl_policy.id }}'
    local: 'false'
    state: 'present'
    url: '{% if not consul_arg.https | bool %}http{% else %}https{% endif %}://{{ consul_join_servers[0] }}:{{ consul_port_arg.http }}'
    token: '{{ consul_acl_arg.master_token }}'
    validate_certs: 'no'
  register: consul_acl_token
  until: consul_acl_token is succeeded
  retries: 5
  delay: 2
  when:
    - consul_node_role == 'client'
    - consul_acl_policy.operation is defined
    - consul_acl_policy.operation == "create"
  environment:
    no_proxy: '{{ consul_join_servers[0] }}'

- name: Create an default agent ACL with rules for windows node.
  consul_acl_policy:
    name: 'agent'
    description: 'An agent policy'
    rules: |
      acl = "write"
      node_prefix "" {
        policy = "write"
      }
      service_prefix "" {
        policy = "read"
      }
      key_prefix "_rexec" {
        policy = "write"
      }
    state: 'present'
    url: '{% if not consul_arg.https | bool %}http{% else %}https{% endif %}://127.0.0.1:{{ consul_port_arg.http }}'
    token: '{{ consul_acl_arg.master_token }}'
    validate_certs: 'no'
  register: consul_acl_policy
  until: consul_acl_policy is succeeded
  retries: 5
  delay: 2
  environment:
    no_proxy: '127.0.0.1'
  when:
    - consul_node_role == 'server'
    - consul_servers[0] in ansible_default_ipv4.address

- name: Create an default agent ACL token for windows node.
  consul_acl_token:
    description: 'An agent token'
    policies:
      - id: '{{ consul_acl_policy.id }}'
    local: 'false'
    state: 'present'
    url: '{% if not consul_arg.https | bool %}http{% else %}https{% endif %}://127.0.0.1:{{ consul_port_arg.http }}'
    token: '{{ consul_acl_arg.master_token }}'
    validate_certs: 'no'
  register: consul_acl_token
  until: consul_acl_token is succeeded
  retries: 5
  delay: 2
  when:
    - consul_node_role == 'server'
    - consul_acl_policy.operation is defined
    - consul_acl_policy.operation == "create"
    - consul_servers[0] in ansible_default_ipv4.address
  environment:
    no_proxy: '127.0.0.1'
